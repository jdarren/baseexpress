{
  "name": "js-combiner",
  "version": "1.0.1",
  "description": "An assets combine and minify tool",
  "keywords": [
    "assets",
    "asset",
    "combine",
    "minify",
    "packer",
    "compressor",
    "compress",
    "client",
    "variables"
  ],
  "author": {
    "name": "Daniel HusÃ¡r",
    "email": "dano.husar@gmail.com"
  },
  "dependencies": {
    "uglify-js": "2.2.3",
    "underscore": ">=1.1.7"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/danielhusar/js-combiner.git"
  },
  "main": "index",
  "engines": [
    "node >= 0.8.0"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://en.wikipedia.org/wiki/MIT_License"
    }
  ],
  "readmeFilename": "Readme.md",
  "_id": "js-combiner@1.0.1",
  "_from": "js-combiner@",
  "readme": "# js-combiner\r\n\r\nAn assets combine and minify tool\r\n\r\n\r\n\r\n## Description\r\n\r\nJs-combiner is a simple tool to combine and minify javascript files. It can also share server side variables to client side js files.\r\n\r\n## Installation\r\nDownload and place it inside node_moudles.\r\nOr use npm: npm install js-combiner.\r\nTested only under express.\r\n\r\n# Usage\r\n\r\nfile: app.js\r\n```javascript\r\nvar combiner = require('js-combiner')(\r\n\t\t\t{\r\n\t\t\t\t'files' : ['/bundle.js']\r\n\t\t\t});\r\n```\r\n\r\nfile: /public/bundle.js\r\n```javascript\r\nrequire('/app.js');   \r\nrequire('/events.js')\r\nrequire(\"/global.js\");\r\n```\r\n\r\nNew generated file with all the content will be: /public/packed/bundle.packed.js\r\n\r\nCombiner settings:\r\n```javascript\r\n{\r\n\t'files'        : [],             //array of files where search for require directives\r\n\t'minify'       : false,          //minify the whole files\r\n\t'reload'       : false,          //recreate file when theres some change in required files\r\n\t'log'          : false,          //output logs\r\n\t'packedSuffix' : 'packed',       //suffix of the new recreated file\r\n\t'packedFolder' : 'packed',       //folder where to put packed files\r\n\t'folder'       : '/public/js',   //folder where are the js files located\r\n\t'cwd'          : process.cwd(),  //current working directory\r\n\t'vars'         : {}              //extra variables to put into client js file\r\n}\r\n```\r\n\r\nYou can also pass custom variables inside vars property, like:\r\n```javascript\r\nvar combiner = require('js-combiner')(\r\n\t\t\t{\r\n\t\t\t\t'files' : ['/bundle.js'],\r\n\t\t\t\t'vars'\t: {\r\n\t\t\t\t\t'ENV' : 'production'\r\n\t\t\t\t}\r\n\t\t\t});\r\n```\r\nAnd than acces this variable inside client js files by calling: ${ENV}\r\n\r\n\r\n",
  "dist": {
    "shasum": "4f6bf4912d43369b319efe5d2f3eecd5725e59f9"
  },
  "_resolved": "https://registry.npmjs.org/js-combiner/-/js-combiner-1.0.1.tgz"
}
