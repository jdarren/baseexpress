{
  "author": {
    "name": "Gabriel Harrison"
  },
  "name": "isa-lib",
  "description": "Reusable Object.prototype.toString type checking library",
  "version": "0.0.5",
  "repository": {
    "url": "https://github.com/nyteshade/isA.git"
  },
  "main": "./lib/isA.js",
  "bin": {},
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "<h1>\nisA.js\n</h1>\n\n<h2>License</h2>\nThe MIT License\n\nCopyright (c) 2013 Gabriel Harrison\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n<h2>Installation</h2>\n\nTo install the isA library, invoke\n```shell\nnpm install isa-lib\n```\n\n<h2>About</h2>\n\nReusable node.js/browser JavaScript library that exposes some isXXX() type of functions. These functions do as much as possible to provide cross JavaScript VM compatible methods to determine whether or not an object is of a given type.\n\nIf this library is included in a browser via a script tag, all of it's components will be placed in the window scope.\n\n<h3>Example Usage:</h3>\n```html\n<script type=\"text/javascript\" src=\"/path/to/isA.js\"></script>\n<script type=\"text/javascript\">\n  console.log(isA(IS_A.NUMBER, 5));       // true\n  console.log(isNumber(5));               // true\n  console.log(isA(5, 5));                 // true\n  console.log(isA(5));                    // \"[object Number]\"\n  console.log(IS_A.NUMBER);               // \"[object Number]\"\n  console.log('NUMBER', 5);               // true\n  console.log(isA(\"[object Number]\", 5)); // true\n  console.log(isA(Number, 5));            // true\n  console.log(isA(String, \"Hi\"));         // true\n</script>\n```\n\nIf this library is require()'ed in node.js, it will return a function that takes either 0 or 1 parameters. If no parameters are required, the functions and properties of this library are returned in a single object literal that\ncan be used for assignment normally. If the function is invoked with a parameter, that parameter is assumed to be the scope into which these functions and properties will be copied.\n\n<h3>Example usage:</h3>\n```javascript\n  var isA = require('isa-lib')();        // scoped to isA param\n  var isA = require('isa-lib')(global);  // scoped to isA *AND* global\n```\n\n<h2>Library contents</h2>\n\n```javascript\nFunction isA(type, object);\nFunction isUndefined(object);\nFunction isFunction(object);\nFunction isBoolean(object);\nFunction isObject(object);\nFunction isRegExp(object);\nFunction isString(object);\nFunction isNumber(object);\nFunction isArray(object);\nFunction isError(object);\nFunction isNull(object);\n\n// Function to inject this library to a JavaScript scope object\nFunction INJECT_IS_A_LIB(scopeObject);\n\n// Anything less than 1 indicates pairs of incorrect type designations\nNumber   IS_A_ACCURACY\n\n// Array of pairs of types that incorrectly return the same value\nArray    IS_A_QUESTIONABLE\n\n// Constants of known base types\nObject   IS_A\n\n// Back reference to type string from constructor\nArray    IS_A_BACKREF\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "isa-lib@0.0.5",
  "dist": {
    "shasum": "2bf0a7bb89c1a25aabeef6dcc68b17bddb2876ae"
  },
  "_from": "isa-lib@",
  "_resolved": "https://registry.npmjs.org/isa-lib/-/isa-lib-0.0.5.tgz"
}
